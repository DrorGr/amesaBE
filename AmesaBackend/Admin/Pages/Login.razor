@page "/admin/login"
@layout LoginLayout
@inject IAdminAuthService AuthService
@inject NavigationManager Navigation


<div class="container">
    <div class="row justify-content-center align-items-center" style="min-height: 100vh;">
        <div class="col-md-5">
            <div class="card shadow-lg">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <i class="fas fa-crown fa-3x text-primary"></i>
                        <h2 class="mt-3">Amesa Admin</h2>
                        <p class="text-muted">Sign in to manage content</p>
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="fas fa-exclamation-triangle"></i> @errorMessage
                        </div>
                    }


                    <div class="mb-3">
                        <label for="email" class="form-label">
                            <i class="fas fa-envelope"></i> Email Address
                        </label>
                        <input type="email" id="email" class="form-control form-control-lg" 
                               value="@email" @oninput="@(e => email = e.Value?.ToString() ?? "")"
                               placeholder="Enter your email" />
                    </div>

                    <div class="mb-4">
                        <label for="password" class="form-label">
                            <i class="fas fa-lock"></i> Password
                        </label>
                        <input type="password" id="password" class="form-control form-control-lg" 
                               value="@password" @oninput="@(e => password = e.Value?.ToString() ?? "")"
                               placeholder="••••••••" />
                    </div>

                    <div class="d-grid">
                        <button type="button" class="btn btn-primary btn-lg" disabled="@isLoading" @onclick="HandleLogin">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                                <span>Signing in...</span>
                            }
                            else
                            {
                                <i class="fas fa-sign-in-alt me-2"></i>
                                <span>Sign In</span>
                            }
                        </button>
                    </div>

                    <div class="text-center mt-4">
                        <small class="text-muted">
                            <i class="fas fa-shield-alt"></i> Secure admin access only
                        </small>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    private string email = string.Empty;
    private string password = string.Empty;
    private string? errorMessage;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        
        isLoading = true;
        errorMessage = null;

        try
        {
            var success = await AuthService.AuthenticateAsync(email, password);

            if (success)
            {
                Navigation.NavigateTo("/admin", forceLoad: true);
            }
            else
            {
                errorMessage = "Invalid email or password. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Login failed: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}

